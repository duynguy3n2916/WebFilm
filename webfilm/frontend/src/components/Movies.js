import './Movies.css'; 
import React, { useMemo, useState } from 'react'; 
import { MOVIES } from './sharedData'; 
import MovieSlider from './MovieSlider';
export default function Movies({ onOpenMovie, onBookMovie }){
  const allGenres = useMemo(()=>{ 
    const set=new Set(); 
    MOVIES.forEach(m=>m.tags.forEach(t=>set.add(t))); 
    return ['T·∫•t c·∫£',...Array.from(set)]; 
  },[]);
  
  const [genre,setGenre]=useState('T·∫•t c·∫£'); 
  const [status,setStatus]=useState('T·∫•t c·∫£'); 
  const [q,setQ]=useState('');
  
  const filtered = useMemo(()=> MOVIES.filter(m=>{ 
    const okG=genre==='T·∫•t c·∫£'||m.tags.includes(genre); 
    const okS=status==='T·∫•t c·∫£'||(status==='ƒêang chi·∫øu'?m.status==='now':m.status==='soon'); 
    const text=(m.title+' '+m.tags.join(' ')).toLowerCase(); 
    const okQ= q.trim()==='' || text.includes(q.trim().toLowerCase()); 
    return okG && okS && okQ; 
  }),[genre,status,q]);

  const getResultTitle = () => {
    if (filtered.length === 0) return "Kh√¥ng t√¨m th·∫•y phim n√†o";
    if (genre !== 'T·∫•t c·∫£' && status !== 'T·∫•t c·∫£') {
      return `üé¨ ${filtered.length} phim ${genre} ${status.toLowerCase()}`;
    }
    if (genre !== 'T·∫•t c·∫£') {
      return `üé≠ ${filtered.length} phim th·ªÉ lo·∫°i ${genre}`;
    }
    if (status !== 'T·∫•t c·∫£') {
      return `üìÖ ${filtered.length} phim ${status.toLowerCase()}`;
    }
    if (q.trim()) {
      return `üîç ${filtered.length} k·∫øt qu·∫£ cho "${q}"`;
    }
    return `üé¨ T·∫•t c·∫£ ${filtered.length} phim`;
  };

  const clearFilters = () => {
    setGenre('T·∫•t c·∫£');
    setStatus('T·∫•t c·∫£');
    setQ('');
  };

  const hasActiveFilters = genre !== 'T·∫•t c·∫£' || status !== 'T·∫•t c·∫£' || q.trim() !== '';

  return (
    <div className="movies">
      <div className="movies-header">
        <h1 className="movies-title">üé¨ Kh√°m ph√° phim</h1>
        <p className="movies-subtitle">T√¨m ki·∫øm v√† l·ªçc phim theo s·ªü th√≠ch c·ªßa b·∫°n</p>
      </div>

      <div className="filters-container">
        <div className="search-section">
          <div className="search-wrapper">
            <div className="search-icon">üîç</div>
            <input 
              value={q} 
              onChange={e=>setQ(e.target.value)} 
              placeholder="T√¨m phim theo t√™n ho·∫∑c th·ªÉ lo·∫°i..."
              className="search-input"
            />
            {q && (
              <button className="clear-search" onClick={()=>setQ('')}>
                √ó
              </button>
            )}
          </div>
        </div>

        <div className="filters-section">
          <div className="filter-group">
            <label className="filter-label">Tr·∫°ng th√°i:</label>
            <div className="filter-buttons">
              {['T·∫•t c·∫£','ƒêang chi·∫øu','S·∫Øp chi·∫øu'].map(s=>(
                <button 
                  key={s} 
                  className={`filter-btn ${status===s?'active':''}`}
                  onClick={()=>setStatus(s)}
                >
                  {s === 'ƒêang chi·∫øu' ? 'üé¨' : s === 'S·∫Øp chi·∫øu' ? '‚è∞' : 'üìã'} {s}
                </button>
              ))}
            </div>
          </div>

          <div className="filter-group">
            <label className="filter-label">Th·ªÉ lo·∫°i:</label>
            <div className="filter-buttons genres-filter">
              {allGenres.map(g=>(
                <button 
                  key={g} 
                  className={`filter-btn ${genre===g?'active':''}`}
                  onClick={()=>setGenre(g)}
                >
                  {g}
                </button>
              ))}
            </div>
          </div>
        </div>

        {hasActiveFilters && (
          <div className="filter-actions">
            <button className="clear-filters-btn" onClick={clearFilters}>
              üóëÔ∏è X√≥a b·ªô l·ªçc
            </button>
          </div>
        )}
      </div>

      <div className="results-section">
        <div className="results-header">
          <h2 className="results-title">{getResultTitle()}</h2>
        </div>
        
        {filtered.length > 0 ? (
          <MovieSlider 
            movies={filtered} 
            onOpen={onOpenMovie}
            onBook={onBookMovie}
            title=""
            showViewMore={false}
          />
        ) : (
          <div className="no-results">
            <div className="no-results-icon">üòî</div>
            <h3>Kh√¥ng t√¨m th·∫•y phim n√†o</h3>
            <p>H√£y th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·ª´ kh√≥a t√¨m ki·∫øm</p>
            <button className="btn btn-primary" onClick={clearFilters}>
              X√≥a b·ªô l·ªçc
            </button>
          </div>
        )}
      </div>
    </div>
  );
}
